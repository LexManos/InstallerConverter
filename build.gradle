plugins {
    id 'application'
}

group = 'uk.gemwire'
archivesBaseName = 'installerconverter'
version = '0.1'

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs(".cache/local/uk/gemwire/RetroInstallerTools/0.1")
    }
}

dependencies {
    implementation group: 'local', name: 'RetroInstallerTools', version: '0.1', classifier: 'fatjar'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.12.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'
    implementation group: 'com.google.jimfs', name: 'jimfs', version: '1.2'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.1'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.1'
}

application {
    mainClassName = 'uk.gemwire.installerconverter.Main'
    applicationDefaultJvmArgs += ["--enable-preview"]
}


run {
    workingDir = file('run/')
    workingDir.mkdirs()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

// Enable preview features, so we can have records and such

tasks.withType(JavaCompile) {
    options.compilerArgs += '--enable-preview'
    options.compilerArgs.addAll([
            "--add-exports", "java.base/sun.security.tools=ALL-UNNAMED",
            "--add-exports", "jdk.jartool/sun.security.tools.jarsigner=ALL-UNNAMED",
            "--add-exports", "java.base/sun.security.util=ALL-UNNAMED",
            "--add-exports", "java.base/sun.security.x509=ALL-UNNAMED"
    ])
    sourceCompatibility = 15;
    options.release = null;
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += "--enable-preview"
}

test {
    useJUnitPlatform()
    workingDir = 'run/'
}